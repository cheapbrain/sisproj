
syntax = "proto3";
package proto;

option java_package = "proto";
option java_outer_classname = "HouseProto";

service HouseService {

	// called when a new node joins, returns the known measurements for every node
	rpc JoinNetwork(Hello) returns (stream Measure) {};
	
	// the identifier matches the node leaving the network
	rpc LeaveNetwork(Identifier) returns (Empty) {};
	
	// the node becomes the new master of the network
	rpc NewMaster(Identifier) returns (Empty) {};
	
	// updates the values of all the outdated measurements
	rpc SetMeasurements(stream Measure) returns (Empty) {};
	
	// ask for boost token
	rpc AskBoost(BoostRequest) returns (BoostResponse) {};
	
	// ends boost for the identifier node
	rpc EndBoost(Identifier) returns (Empty) {};
}

message Empty {}

message Hello {
	string id = 1;
	string address = 2;
	int32 port = 3;
}

message Identifier {
	string id = 1;
}

message BoostRequest {
	string id = 1;
	int64 timestamp = 2;
}

message BoostResponse {
	string id = 1;
	
	enum BoostResponseType {
		UNKNOWN = 0;
		GRANT = 1;
		DENY = 2;
	}
	BoostResponseType type = 2;

}

message Measure {
	string id = 1;
	double value = 2;
	int64 timestamp = 3;
}


// deprecated

message Welcome {}

message Goodbye {}

message MeasureList {
	repeated Measure measures = 1;
}

message AskBoost {
	int64 timestamp = 1;
}

message GrantBoost {}

message DenyBoost {}

message EndBoost {}
